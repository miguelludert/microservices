{
    "stacks": {
      "TodoTask": {
        "Parameters": {
          "referencetotransformerrootstackenv10C5A902Ref": {
            "Type": "String"
          },
          "referencetotransformerrootstackGraphQLAPI20497F53ApiId": {
            "Type": "String"
          },
          "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name": {
            "Type": "String"
          },
          "referencetotransformerrootstackS3DeploymentBucket7592718ARef": {
            "Type": "String"
          },
          "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": {
            "Type": "String"
          }
        },
        "Resources": {
          "TodoTaskTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "BillingMode": {
                "Fn::If": [
                  "ShouldUsePayPerRequestBilling",
                  "PAY_PER_REQUEST",
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              },
              "PointInTimeRecoverySpecification": {
                "Fn::If": [
                  "ShouldUsePointInTimeRecovery",
                  {
                    "PointInTimeRecoveryEnabled": true
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              },
              "ProvisionedThroughput": {
                "Fn::If": [
                  "ShouldUsePayPerRequestBilling",
                  {
                    "Ref": "AWS::NoValue"
                  },
                  {
                    "ReadCapacityUnits": {
                      "Ref": "DynamoDBModelTableReadIOPS"
                    },
                    "WriteCapacityUnits": {
                      "Ref": "DynamoDBModelTableWriteIOPS"
                    }
                  }
                ]
              },
              "SSESpecification": {
                "SSEEnabled": {
                  "Fn::If": [
                    "ShouldUseServerSideEncryption",
                    true,
                    false
                  ]
                }
              },
              "StreamSpecification": {
                "StreamViewType": "NEW_AND_OLD_IMAGES"
              },
              "TableName": {
                "Fn::Join": [
                  "",
                  [
                    "TodoTask-",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "-",
                    {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  ]
                ]
              }
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/TodoTaskTable/Resource"
            }
          },
          "TodoTaskIAMRoleABAC7A55": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Statement": [
                  {
                    "Action": "sts:AssumeRole",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "appsync.amazonaws.com"
                    }
                  }
                ],
                "Version": "2012-10-17"
              },
              "RoleName": {
                "Fn::Join": [
                  "",
                  [
                    "TodoTaskIAMRoleea8ea2-",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "-",
                    {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  ]
                ]
              }
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/TodoTaskIAMRole/Resource"
            }
          },
          "TodoTaskIAMRoleDefaultPolicyDCD20793": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": [
                      "dynamodb:BatchGetItem",
                      "dynamodb:GetRecords",
                      "dynamodb:GetShardIterator",
                      "dynamodb:Query",
                      "dynamodb:GetItem",
                      "dynamodb:Scan",
                      "dynamodb:ConditionCheckItem",
                      "dynamodb:BatchWriteItem",
                      "dynamodb:PutItem",
                      "dynamodb:UpdateItem",
                      "dynamodb:DeleteItem"
                    ],
                    "Effect": "Allow",
                    "Resource": [
                      {
                        "Fn::GetAtt": [
                          "TodoTaskTable",
                          "Arn"
                        ]
                      },
                      {
                        "Ref": "AWS::NoValue"
                      }
                    ]
                  }
                ],
                "Version": "2012-10-17"
              },
              "PolicyName": "TodoTaskIAMRoleDefaultPolicyDCD20793",
              "Roles": [
                {
                  "Ref": "TodoTaskIAMRoleABAC7A55"
                }
              ]
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/TodoTaskIAMRole/DefaultPolicy/Resource"
            }
          },
          "DynamoDBAccess71ABE5AE": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": [
                      "dynamodb:BatchGetItem",
                      "dynamodb:BatchWriteItem",
                      "dynamodb:PutItem",
                      "dynamodb:DeleteItem",
                      "dynamodb:GetItem",
                      "dynamodb:Scan",
                      "dynamodb:Query",
                      "dynamodb:UpdateItem"
                    ],
                    "Effect": "Allow",
                    "Resource": [
                      {
                        "Fn::Sub": [
                          "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                          {
                            "tablename": {
                              "Fn::Join": [
                                "",
                                [
                                  "TodoTask-",
                                  {
                                    "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                                  },
                                  "-",
                                  {
                                    "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                  }
                                ]
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "Fn::Sub": [
                          "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                          {
                            "tablename": {
                              "Fn::Join": [
                                "",
                                [
                                  "TodoTask-",
                                  {
                                    "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                                  },
                                  "-",
                                  {
                                    "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                  }
                                ]
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "Version": "2012-10-17"
              },
              "PolicyName": "DynamoDBAccess71ABE5AE",
              "Roles": [
                {
                  "Ref": "TodoTaskIAMRoleABAC7A55"
                }
              ]
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/DynamoDBAccess/Resource"
            }
          },
          "TodoTaskDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "Name": "TodoTaskTable",
              "Type": "AMAZON_DYNAMODB",
              "DynamoDBConfig": {
                "AwsRegion": {
                  "Ref": "AWS::Region"
                },
                "TableName": {
                  "Ref": "TodoTaskTable"
                }
              },
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "TodoTaskIAMRoleABAC7A55",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "TodoTaskIAMRoleABAC7A55"
            ],
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/TodoTaskDataSource/Resource"
            }
          },
          "QuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunctionD5099704": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name"
              },
              "FunctionVersion": "2018-05-29",
              "Name": "QuerygetTodoTaskpostAuth0Function",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Query.getTodoTask.postAuth.1.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson({})"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/QuerygetTodoTaskpostAuth0Function/QuerygetTodoTaskpostAuth0Function.AppSyncFunction"
            }
          },
          "QueryGetTodoTaskDataResolverFnQueryGetTodoTaskDataResolverFnAppSyncFunction007E51AB": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Fn::GetAtt": [
                  "TodoTaskDataSource",
                  "Name"
                ]
              },
              "FunctionVersion": "2018-05-29",
              "Name": "QueryGetTodoTaskDataResolverFn",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Query.getTodoTask.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Query.getTodoTask.res.vtl"
                  ]
                ]
              }
            },
            "DependsOn": [
              "TodoTaskDataSource"
            ],
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/QueryGetTodoTaskDataResolverFn/QueryGetTodoTaskDataResolverFn.AppSyncFunction"
            }
          },
          "GetTodoTaskResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "getTodoTask",
              "TypeName": "Query",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Fn::GetAtt": [
                      "QuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunctionD5099704",
                      "FunctionId"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "QueryGetTodoTaskDataResolverFnQueryGetTodoTaskDataResolverFnAppSyncFunction007E51AB",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplate": {
                "Fn::Join": [
                  "",
                  [
                    "$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"getTodoTask\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "\"))\n$util.qr($ctx.stash.put(\"tableName\", \"",
                    {
                      "Ref": "TodoTaskTable"
                    },
                    "\"))\n$util.toJson({})"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/queryGetTodoTaskResolver"
            }
          },
          "QueryListTodoTasksDataResolverFnQueryListTodoTasksDataResolverFnAppSyncFunction521C1E2E": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Fn::GetAtt": [
                  "TodoTaskDataSource",
                  "Name"
                ]
              },
              "FunctionVersion": "2018-05-29",
              "Name": "QueryListTodoTasksDataResolverFn",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Query.listTodoTasks.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Query.listTodoTasks.res.vtl"
                  ]
                ]
              }
            },
            "DependsOn": [
              "TodoTaskDataSource"
            ],
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/QueryListTodoTasksDataResolverFn/QueryListTodoTasksDataResolverFn.AppSyncFunction"
            }
          },
          "ListTodoTaskResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "listTodoTasks",
              "TypeName": "Query",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Fn::GetAtt": [
                      "QuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunctionD5099704",
                      "FunctionId"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "QueryListTodoTasksDataResolverFnQueryListTodoTasksDataResolverFnAppSyncFunction521C1E2E",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplate": {
                "Fn::Join": [
                  "",
                  [
                    "$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"listTodoTasks\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "\"))\n$util.qr($ctx.stash.put(\"tableName\", \"",
                    {
                      "Ref": "TodoTaskTable"
                    },
                    "\"))\n$util.toJson({})"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/queryListTodoTasksResolver"
            }
          },
          "MutationcreateTodoTaskinit0FunctionMutationcreateTodoTaskinit0FunctionAppSyncFunction82C54390": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name"
              },
              "FunctionVersion": "2018-05-29",
              "Name": "MutationcreateTodoTaskinit0Function",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Mutation.createTodoTask.init.1.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson({})"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/MutationcreateTodoTaskinit0Function/MutationcreateTodoTaskinit0Function.AppSyncFunction"
            }
          },
          "MutationCreateTodoTaskDataResolverFnMutationCreateTodoTaskDataResolverFnAppSyncFunction7474F2E3": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Fn::GetAtt": [
                  "TodoTaskDataSource",
                  "Name"
                ]
              },
              "FunctionVersion": "2018-05-29",
              "Name": "MutationCreateTodoTaskDataResolverFn",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Mutation.createTodoTask.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Mutation.createTodoTask.res.vtl"
                  ]
                ]
              }
            },
            "DependsOn": [
              "TodoTaskDataSource"
            ],
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/MutationCreateTodoTaskDataResolverFn/MutationCreateTodoTaskDataResolverFn.AppSyncFunction"
            }
          },
          "CreateTodoTaskResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "createTodoTask",
              "TypeName": "Mutation",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Fn::GetAtt": [
                      "MutationcreateTodoTaskinit0FunctionMutationcreateTodoTaskinit0FunctionAppSyncFunction82C54390",
                      "FunctionId"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "QuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunctionD5099704",
                      "FunctionId"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "MutationCreateTodoTaskDataResolverFnMutationCreateTodoTaskDataResolverFnAppSyncFunction7474F2E3",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplate": {
                "Fn::Join": [
                  "",
                  [
                    "$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"createTodoTask\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "\"))\n$util.qr($ctx.stash.put(\"tableName\", \"",
                    {
                      "Ref": "TodoTaskTable"
                    },
                    "\"))\n$util.toJson({})"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/mutationCreateTodoTaskResolver"
            }
          },
          "MutationupdateTodoTaskinit0FunctionMutationupdateTodoTaskinit0FunctionAppSyncFunction890D27CA": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name"
              },
              "FunctionVersion": "2018-05-29",
              "Name": "MutationupdateTodoTaskinit0Function",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Mutation.updateTodoTask.init.1.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson({})"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/MutationupdateTodoTaskinit0Function/MutationupdateTodoTaskinit0Function.AppSyncFunction"
            }
          },
          "MutationUpdateTodoTaskDataResolverFnMutationUpdateTodoTaskDataResolverFnAppSyncFunction9A800A8B": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Fn::GetAtt": [
                  "TodoTaskDataSource",
                  "Name"
                ]
              },
              "FunctionVersion": "2018-05-29",
              "Name": "MutationUpdateTodoTaskDataResolverFn",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Mutation.updateTodoTask.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Mutation.updateTodoTask.res.vtl"
                  ]
                ]
              }
            },
            "DependsOn": [
              "TodoTaskDataSource"
            ],
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/MutationUpdateTodoTaskDataResolverFn/MutationUpdateTodoTaskDataResolverFn.AppSyncFunction"
            }
          },
          "UpdateTodoTaskResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "updateTodoTask",
              "TypeName": "Mutation",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Fn::GetAtt": [
                      "MutationupdateTodoTaskinit0FunctionMutationupdateTodoTaskinit0FunctionAppSyncFunction890D27CA",
                      "FunctionId"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "QuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunctionD5099704",
                      "FunctionId"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "MutationUpdateTodoTaskDataResolverFnMutationUpdateTodoTaskDataResolverFnAppSyncFunction9A800A8B",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplate": {
                "Fn::Join": [
                  "",
                  [
                    "$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"updateTodoTask\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "\"))\n$util.qr($ctx.stash.put(\"tableName\", \"",
                    {
                      "Ref": "TodoTaskTable"
                    },
                    "\"))\n$util.toJson({})"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/mutationUpdateTodoTaskResolver"
            }
          },
          "MutationDeleteTodoTaskDataResolverFnMutationDeleteTodoTaskDataResolverFnAppSyncFunctionCA98F63B": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Fn::GetAtt": [
                  "TodoTaskDataSource",
                  "Name"
                ]
              },
              "FunctionVersion": "2018-05-29",
              "Name": "MutationDeleteTodoTaskDataResolverFn",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Mutation.deleteTodoTask.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Mutation.deleteTodoTask.res.vtl"
                  ]
                ]
              }
            },
            "DependsOn": [
              "TodoTaskDataSource"
            ],
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/MutationDeleteTodoTaskDataResolverFn/MutationDeleteTodoTaskDataResolverFn.AppSyncFunction"
            }
          },
          "DeleteTodoTaskResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "deleteTodoTask",
              "TypeName": "Mutation",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Fn::GetAtt": [
                      "QuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunctionD5099704",
                      "FunctionId"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "MutationDeleteTodoTaskDataResolverFnMutationDeleteTodoTaskDataResolverFnAppSyncFunctionCA98F63B",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplate": {
                "Fn::Join": [
                  "",
                  [
                    "$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"deleteTodoTask\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "\"))\n$util.qr($ctx.stash.put(\"tableName\", \"",
                    {
                      "Ref": "TodoTaskTable"
                    },
                    "\"))\n$util.toJson({})"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/mutationDeleteTodoTaskResolver"
            }
          },
          "SubscriptionOnCreateTodoTaskDataResolverFnSubscriptionOnCreateTodoTaskDataResolverFnAppSyncFunction8632E26E": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name"
              },
              "FunctionVersion": "2018-05-29",
              "Name": "SubscriptionOnCreateTodoTaskDataResolverFn",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Subscription.onCreateTodoTask.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Subscription.onCreateTodoTask.res.vtl"
                  ]
                ]
              }
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/SubscriptionOnCreateTodoTaskDataResolverFn/SubscriptionOnCreateTodoTaskDataResolverFn.AppSyncFunction"
            }
          },
          "SubscriptiononCreateTodoTaskResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "onCreateTodoTask",
              "TypeName": "Subscription",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Fn::GetAtt": [
                      "QuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunctionD5099704",
                      "FunctionId"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "SubscriptionOnCreateTodoTaskDataResolverFnSubscriptionOnCreateTodoTaskDataResolverFnAppSyncFunction8632E26E",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplate": {
                "Fn::Join": [
                  "",
                  [
                    "$util.qr($ctx.stash.put(\"typeName\", \"Subscription\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"onCreateTodoTask\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"NONE\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "\"))\n\n$util.toJson({})"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/subscriptionOnCreateTodoTaskResolver"
            }
          },
          "SubscriptiononUpdateTodoTaskResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "onUpdateTodoTask",
              "TypeName": "Subscription",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Fn::GetAtt": [
                      "QuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunctionD5099704",
                      "FunctionId"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "SubscriptionOnCreateTodoTaskDataResolverFnSubscriptionOnCreateTodoTaskDataResolverFnAppSyncFunction8632E26E",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplate": {
                "Fn::Join": [
                  "",
                  [
                    "$util.qr($ctx.stash.put(\"typeName\", \"Subscription\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"onUpdateTodoTask\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"NONE\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "\"))\n\n$util.toJson({})"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/subscriptionOnUpdateTodoTaskResolver"
            }
          },
          "SubscriptiononDeleteTodoTaskResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "onDeleteTodoTask",
              "TypeName": "Subscription",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Fn::GetAtt": [
                      "QuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunctionD5099704",
                      "FunctionId"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "SubscriptionOnCreateTodoTaskDataResolverFnSubscriptionOnCreateTodoTaskDataResolverFnAppSyncFunction8632E26E",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplate": {
                "Fn::Join": [
                  "",
                  [
                    "$util.qr($ctx.stash.put(\"typeName\", \"Subscription\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"onDeleteTodoTask\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"NONE\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "\"))\n\n$util.toJson({})"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/subscriptionOnDeleteTodoTaskResolver"
            }
          },
          "CDKMetadata": {
            "Type": "AWS::CDK::Metadata",
            "Properties": {
              "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VPywrCMBD8Fu9xtSJ4FSxeLa0/sE2ipI+kJBulhPy7TXyAp52dYWdmCyh2e9iujvh0ay76TeDGSggNIe/Z6aYrtDhKkjYtJ6OFImU0q6Uz3nKZ2IunyRNbREfWc0rcV48sGQcxaxyNaCFcsR3yVQaRKRwh1ObN5VmZQfE5Z2e0WEyTmzWHUGabsi2RsPnl/29nr3mquNS5qbu3mPt+Kg0PaWOMTBshoXObR7GH4rD83zml1tZrUqOE+j1fC6c6EBwBAAA="
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/TodoTask/CDKMetadata/Default"
            },
            "Condition": "CDKMetadataAvailable"
          }
        },
        "Outputs": {
          "GetAttTodoTaskTableStreamArn": {
            "Description": "Your DynamoDB table StreamArn.",
            "Value": {
              "Fn::GetAtt": [
                "TodoTaskTable",
                "StreamArn"
              ]
            },
            "Export": {
              "Name": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "GetAtt:TodoTaskTable:StreamArn"
                  ]
                ]
              }
            }
          },
          "GetAttTodoTaskTableName": {
            "Description": "Your DynamoDB table name.",
            "Value": {
              "Ref": "TodoTaskTable"
            },
            "Export": {
              "Name": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "GetAtt:TodoTaskTable:Name"
                  ]
                ]
              }
            }
          },
          "GetAttTodoTaskDataSourceName": {
            "Description": "Your model DataSource name.",
            "Value": {
              "Fn::GetAtt": [
                "TodoTaskDataSource",
                "Name"
              ]
            },
            "Export": {
              "Name": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "GetAtt:TodoTaskDataSource:Name"
                  ]
                ]
              }
            }
          },
          "transformerrootstackTodoTaskQuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunction2AFC2ECDFunctionId": {
            "Value": {
              "Fn::GetAtt": [
                "QuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunctionD5099704",
                "FunctionId"
              ]
            }
          }
        }
      },
      "SharedWith": {
        "Parameters": {
          "referencetotransformerrootstackenv10C5A902Ref": {
            "Type": "String"
          },
          "referencetotransformerrootstackGraphQLAPI20497F53ApiId": {
            "Type": "String"
          },
          "referencetotransformerrootstackS3DeploymentBucket7592718ARef": {
            "Type": "String"
          },
          "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": {
            "Type": "String"
          },
          "referencetotransformerrootstackTodoTaskNestedStackTodoTaskNestedStackResourceB67A6D50OutputstransformerrootstackTodoTaskQuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunction2AFC2ECDFunctionId": {
            "Type": "String"
          }
        },
        "Resources": {
          "SharedWithTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "BillingMode": {
                "Fn::If": [
                  "ShouldUsePayPerRequestBilling",
                  "PAY_PER_REQUEST",
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              },
              "PointInTimeRecoverySpecification": {
                "Fn::If": [
                  "ShouldUsePointInTimeRecovery",
                  {
                    "PointInTimeRecoveryEnabled": true
                  },
                  {
                    "Ref": "AWS::NoValue"
                  }
                ]
              },
              "ProvisionedThroughput": {
                "Fn::If": [
                  "ShouldUsePayPerRequestBilling",
                  {
                    "Ref": "AWS::NoValue"
                  },
                  {
                    "ReadCapacityUnits": {
                      "Ref": "DynamoDBModelTableReadIOPS"
                    },
                    "WriteCapacityUnits": {
                      "Ref": "DynamoDBModelTableWriteIOPS"
                    }
                  }
                ]
              },
              "SSESpecification": {
                "SSEEnabled": {
                  "Fn::If": [
                    "ShouldUseServerSideEncryption",
                    true,
                    false
                  ]
                }
              },
              "StreamSpecification": {
                "StreamViewType": "NEW_AND_OLD_IMAGES"
              },
              "TableName": {
                "Fn::Join": [
                  "",
                  [
                    "SharedWith-",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "-",
                    {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  ]
                ]
              }
            },
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete",
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/SharedWith/SharedWithTable/Resource"
            }
          },
          "SharedWithIAMRoleEF5306CA": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Statement": [
                  {
                    "Action": "sts:AssumeRole",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "appsync.amazonaws.com"
                    }
                  }
                ],
                "Version": "2012-10-17"
              },
              "RoleName": {
                "Fn::Join": [
                  "",
                  [
                    "SharedWithIAMRolee6fec8-",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "-",
                    {
                      "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                    }
                  ]
                ]
              }
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/SharedWith/SharedWithIAMRole/Resource"
            }
          },
          "SharedWithIAMRoleDefaultPolicy00546447": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": [
                      "dynamodb:BatchGetItem",
                      "dynamodb:GetRecords",
                      "dynamodb:GetShardIterator",
                      "dynamodb:Query",
                      "dynamodb:GetItem",
                      "dynamodb:Scan",
                      "dynamodb:ConditionCheckItem",
                      "dynamodb:BatchWriteItem",
                      "dynamodb:PutItem",
                      "dynamodb:UpdateItem",
                      "dynamodb:DeleteItem"
                    ],
                    "Effect": "Allow",
                    "Resource": [
                      {
                        "Fn::GetAtt": [
                          "SharedWithTable",
                          "Arn"
                        ]
                      },
                      {
                        "Ref": "AWS::NoValue"
                      }
                    ]
                  }
                ],
                "Version": "2012-10-17"
              },
              "PolicyName": "SharedWithIAMRoleDefaultPolicy00546447",
              "Roles": [
                {
                  "Ref": "SharedWithIAMRoleEF5306CA"
                }
              ]
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/SharedWith/SharedWithIAMRole/DefaultPolicy/Resource"
            }
          },
          "DynamoDBAccess71ABE5AE": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": [
                      "dynamodb:BatchGetItem",
                      "dynamodb:BatchWriteItem",
                      "dynamodb:PutItem",
                      "dynamodb:DeleteItem",
                      "dynamodb:GetItem",
                      "dynamodb:Scan",
                      "dynamodb:Query",
                      "dynamodb:UpdateItem"
                    ],
                    "Effect": "Allow",
                    "Resource": [
                      {
                        "Fn::Sub": [
                          "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                          {
                            "tablename": {
                              "Fn::Join": [
                                "",
                                [
                                  "SharedWith-",
                                  {
                                    "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                                  },
                                  "-",
                                  {
                                    "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                  }
                                ]
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "Fn::Sub": [
                          "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                          {
                            "tablename": {
                              "Fn::Join": [
                                "",
                                [
                                  "SharedWith-",
                                  {
                                    "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                                  },
                                  "-",
                                  {
                                    "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                  }
                                ]
                              ]
                            }
                          }
                        ]
                      }
                    ]
                  }
                ],
                "Version": "2012-10-17"
              },
              "PolicyName": "DynamoDBAccess71ABE5AE",
              "Roles": [
                {
                  "Ref": "SharedWithIAMRoleEF5306CA"
                }
              ]
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/SharedWith/DynamoDBAccess/Resource"
            }
          },
          "SharedWithDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "Name": "SharedWithTable",
              "Type": "AMAZON_DYNAMODB",
              "DynamoDBConfig": {
                "AwsRegion": {
                  "Ref": "AWS::Region"
                },
                "TableName": {
                  "Ref": "SharedWithTable"
                }
              },
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "SharedWithIAMRoleEF5306CA",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SharedWithIAMRoleEF5306CA"
            ],
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/SharedWith/SharedWithDataSource/Resource"
            }
          },
          "QueryGetSharedWithDataResolverFnQueryGetSharedWithDataResolverFnAppSyncFunctionE67E803D": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Fn::GetAtt": [
                  "SharedWithDataSource",
                  "Name"
                ]
              },
              "FunctionVersion": "2018-05-29",
              "Name": "QueryGetSharedWithDataResolverFn",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Query.getSharedWith.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Query.getSharedWith.res.vtl"
                  ]
                ]
              }
            },
            "DependsOn": [
              "SharedWithDataSource"
            ],
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/SharedWith/QueryGetSharedWithDataResolverFn/QueryGetSharedWithDataResolverFn.AppSyncFunction"
            }
          },
          "GetSharedWithResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "getSharedWith",
              "TypeName": "Query",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Ref": "referencetotransformerrootstackTodoTaskNestedStackTodoTaskNestedStackResourceB67A6D50OutputstransformerrootstackTodoTaskQuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunction2AFC2ECDFunctionId"
                  },
                  {
                    "Fn::GetAtt": [
                      "QueryGetSharedWithDataResolverFnQueryGetSharedWithDataResolverFnAppSyncFunctionE67E803D",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplate": {
                "Fn::Join": [
                  "",
                  [
                    "$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"getSharedWith\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "\"))\n$util.qr($ctx.stash.put(\"tableName\", \"",
                    {
                      "Ref": "SharedWithTable"
                    },
                    "\"))\n$util.toJson({})"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/SharedWith/queryGetSharedWithResolver"
            }
          },
          "QueryListSharedWithsDataResolverFnQueryListSharedWithsDataResolverFnAppSyncFunctionEA9BE462": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Fn::GetAtt": [
                  "SharedWithDataSource",
                  "Name"
                ]
              },
              "FunctionVersion": "2018-05-29",
              "Name": "QueryListSharedWithsDataResolverFn",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Query.listSharedWiths.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Query.listSharedWiths.res.vtl"
                  ]
                ]
              }
            },
            "DependsOn": [
              "SharedWithDataSource"
            ],
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/SharedWith/QueryListSharedWithsDataResolverFn/QueryListSharedWithsDataResolverFn.AppSyncFunction"
            }
          },
          "ListSharedWithResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "listSharedWiths",
              "TypeName": "Query",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Ref": "referencetotransformerrootstackTodoTaskNestedStackTodoTaskNestedStackResourceB67A6D50OutputstransformerrootstackTodoTaskQuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunction2AFC2ECDFunctionId"
                  },
                  {
                    "Fn::GetAtt": [
                      "QueryListSharedWithsDataResolverFnQueryListSharedWithsDataResolverFnAppSyncFunctionEA9BE462",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplate": {
                "Fn::Join": [
                  "",
                  [
                    "$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"listSharedWiths\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "\"))\n$util.qr($ctx.stash.put(\"tableName\", \"",
                    {
                      "Ref": "SharedWithTable"
                    },
                    "\"))\n$util.toJson({})"
                  ]
                ]
              },
              "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)"
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/SharedWith/queryListSharedWithsResolver"
            }
          },
          "CDKMetadata": {
            "Type": "AWS::CDK::Metadata",
            "Properties": {
              "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VPywrCMBD8Fu9xtSJ4FSxeLa0/sE2ipI+kJBulhPy7TXyAp52dYWdmCyh2e9iujvh0ay76TeDGSggNIe/Z6aYrtDhKkjYtJ6OFImU0q6Uz3nKZ2IunyRNbREfWc0rcV48sGQcxaxyNaCFcsR3yVQaRKRwh1ObN5VmZQfE5Z2e0WEyTmzWHUGabsi2RsPnl/29nr3mquNS5qbu3mPt+Kg0PaWOMTBshoXObR7GH4rD83zml1tZrUqOE+j1fC6c6EBwBAAA="
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/SharedWith/CDKMetadata/Default"
            },
            "Condition": "CDKMetadataAvailable"
          }
        },
        "Outputs": {
          "GetAttSharedWithTableStreamArn": {
            "Description": "Your DynamoDB table StreamArn.",
            "Value": {
              "Fn::GetAtt": [
                "SharedWithTable",
                "StreamArn"
              ]
            },
            "Export": {
              "Name": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "GetAtt:SharedWithTable:StreamArn"
                  ]
                ]
              }
            }
          },
          "GetAttSharedWithTableName": {
            "Description": "Your DynamoDB table name.",
            "Value": {
              "Ref": "SharedWithTable"
            },
            "Export": {
              "Name": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "GetAtt:SharedWithTable:Name"
                  ]
                ]
              }
            }
          },
          "GetAttSharedWithDataSourceName": {
            "Description": "Your model DataSource name.",
            "Value": {
              "Fn::GetAtt": [
                "SharedWithDataSource",
                "Name"
              ]
            },
            "Export": {
              "Name": {
                "Fn::Join": [
                  ":",
                  [
                    {
                      "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                    },
                    "GetAtt:SharedWithDataSource:Name"
                  ]
                ]
              }
            }
          }
        }
      },
      "FunctionDirectiveStack": {
        "Description": "An auto-generated nested stack for the @function directive.",
        "AWSTemplateFormatVersion": "2010-09-09",
        "Conditions": {
          "HasEnvironmentParameter": {
            "Fn::Not": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                  },
                  "NONE"
                ]
              }
            ]
          }
        },
        "Resources": {
          "ShareTaskLambdaDataSourceServiceRole1D5FB669": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Statement": [
                  {
                    "Action": "sts:AssumeRole",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "appsync.amazonaws.com"
                    }
                  }
                ],
                "Version": "2012-10-17"
              }
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/FunctionDirectiveStack/ShareTaskLambdaDataSource/ServiceRole/Resource"
            }
          },
          "ShareTaskLambdaDataSourceServiceRoleDefaultPolicyA2747709": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "lambda:InvokeFunction",
                    "Effect": "Allow",
                    "Resource": {
                      "Fn::If": [
                        "HasEnvironmentParameter",
                        {
                          "Fn::Sub": [
                            "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:share-task",
                            {}
                          ]
                        },
                        {
                          "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:share-task"
                        }
                      ]
                    }
                  }
                ],
                "Version": "2012-10-17"
              },
              "PolicyName": "ShareTaskLambdaDataSourceServiceRoleDefaultPolicyA2747709",
              "Roles": [
                {
                  "Ref": "ShareTaskLambdaDataSourceServiceRole1D5FB669"
                }
              ]
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/FunctionDirectiveStack/ShareTaskLambdaDataSource/ServiceRole/DefaultPolicy/Resource"
            }
          },
          "ShareTaskLambdaDataSource": {
            "Type": "AWS::AppSync::DataSource",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "Name": "ShareTaskLambdaDataSource",
              "Type": "AWS_LAMBDA",
              "LambdaConfig": {
                "LambdaFunctionArn": {
                  "Fn::If": [
                    "HasEnvironmentParameter",
                    {
                      "Fn::Sub": [
                        "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:share-task",
                        {}
                      ]
                    },
                    {
                      "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:share-task"
                    }
                  ]
                }
              },
              "ServiceRoleArn": {
                "Fn::GetAtt": [
                  "ShareTaskLambdaDataSourceServiceRole1D5FB669",
                  "Arn"
                ]
              }
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/FunctionDirectiveStack/ShareTaskLambdaDataSource/Resource"
            }
          },
          "InvokeShareTaskLambdaDataSourceInvokeShareTaskLambdaDataSourceAppSyncFunctionDED56722": {
            "Type": "AWS::AppSync::FunctionConfiguration",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "DataSourceName": {
                "Fn::GetAtt": [
                  "ShareTaskLambdaDataSource",
                  "Name"
                ]
              },
              "FunctionVersion": "2018-05-29",
              "Name": "InvokeShareTaskLambdaDataSource",
              "RequestMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/InvokeShareTaskLambdaDataSource.req.vtl"
                  ]
                ]
              },
              "ResponseMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/InvokeShareTaskLambdaDataSource.res.vtl"
                  ]
                ]
              }
            },
            "DependsOn": [
              "ShareTaskLambdaDataSource"
            ],
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/FunctionDirectiveStack/InvokeShareTaskLambdaDataSource/InvokeShareTaskLambdaDataSource.AppSyncFunction"
            }
          },
          "MutationshareTaskResolver": {
            "Type": "AWS::AppSync::Resolver",
            "Properties": {
              "ApiId": {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "FieldName": "shareTask",
              "TypeName": "Mutation",
              "Kind": "PIPELINE",
              "PipelineConfig": {
                "Functions": [
                  {
                    "Fn::GetAtt": [
                      "InvokeShareTaskLambdaDataSourceInvokeShareTaskLambdaDataSourceAppSyncFunctionDED56722",
                      "FunctionId"
                    ]
                  }
                ]
              },
              "RequestMappingTemplateS3Location": "## [Start] Stash resolver specific context.. **\n$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"shareTask\"))\n{}\n## [End] Stash resolver specific context.. **",
              "ResponseMappingTemplateS3Location": {
                "Fn::Join": [
                  "",
                  [
                    "s3://",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
                    },
                    "/",
                    {
                      "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
                    },
                    "/resolvers/Mutation.shareTask.res.vtl"
                  ]
                ]
              }
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/FunctionDirectiveStack/mutationShareTaskResolver"
            }
          },
          "CDKMetadata": {
            "Type": "AWS::CDK::Metadata",
            "Properties": {
              "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WPzQ6CMBCEn8V7Wawh8WrEePJg4AnWtphCaUl/MKTpu0shHjzN7O58mSwFeqrgeLjgxxWMD2VkxgqIrUc2kLrTtdFcemk0WZ3zNjCf141wJlgmEslgVDi+OMI9aJazV3SC4DS5RTOIj+14Q4/txmT+f/pxa0Un38HiXrjXqFnYRCSOEBujtvymT6MkW/K4u5QS0YYL6F050wroef2rd1IWNmgvRwHNrl9fGIBh9AAAAA=="
            },
            "Metadata": {
              "aws:cdk:path": "transformer-root-stack/FunctionDirectiveStack/CDKMetadata/Default"
            },
            "Condition": "CDKMetadataAvailable"
          }
        },
        "Parameters": {
          "referencetotransformerrootstackenv10C5A902Ref": {
            "Type": "String"
          },
          "referencetotransformerrootstackGraphQLAPI20497F53ApiId": {
            "Type": "String"
          },
          "referencetotransformerrootstackS3DeploymentBucket7592718ARef": {
            "Type": "String"
          },
          "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": {
            "Type": "String"
          }
        }
      }
    },
    "rootStack": {
      "Parameters": {
        "env": {
          "Type": "String",
          "Default": "NONE"
        },
        "DynamoDBModelTableReadIOPS": {
          "Type": "Number",
          "Default": 5,
          "Description": "The number of read IOPS the table should support."
        },
        "DynamoDBModelTableWriteIOPS": {
          "Type": "Number",
          "Default": 5,
          "Description": "The number of write IOPS the table should support."
        },
        "DynamoDBBillingMode": {
          "Type": "String",
          "Default": "PAY_PER_REQUEST",
          "AllowedValues": [
            "PAY_PER_REQUEST",
            "PROVISIONED"
          ],
          "Description": "Configure @model types to create DynamoDB tables with PAY_PER_REQUEST or PROVISIONED billing modes."
        },
        "DynamoDBEnablePointInTimeRecovery": {
          "Type": "String",
          "Default": "false",
          "AllowedValues": [
            "true",
            "false"
          ],
          "Description": "Whether to enable Point in Time Recovery on the table."
        },
        "DynamoDBEnableServerSideEncryption": {
          "Type": "String",
          "Default": "true",
          "AllowedValues": [
            "true",
            "false"
          ],
          "Description": "Enable server side encryption powered by KMS."
        },
        "AppSyncApiName": {
          "Type": "String",
          "Default": "AppSyncSimpleTransform"
        },
        "S3DeploymentBucket": {
          "Type": "String",
          "Description": "An S3 Bucket name where assets are deployed"
        },
        "S3DeploymentRootKey": {
          "Type": "String",
          "Description": "An S3 key relative to the S3DeploymentBucket that points to the root of the deployment directory."
        }
      },
      "Resources": {
        "GraphQLAPI": {
          "Type": "AWS::AppSync::GraphQLApi",
          "Properties": {
            "AuthenticationType": "API_KEY",
            "Name": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AppSyncApiName"
                  },
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          },
          "Metadata": {
            "aws:cdk:path": "transformer-root-stack/GraphQLAPI/Resource"
          }
        },
        "GraphQLAPITransformerSchema3CB2AE18": {
          "Type": "AWS::AppSync::GraphQLSchema",
          "Properties": {
            "ApiId": {
              "Fn::GetAtt": [
                "GraphQLAPI",
                "ApiId"
              ]
            },
            "DefinitionS3Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "S3DeploymentBucket"
                  },
                  "/",
                  {
                    "Ref": "S3DeploymentRootKey"
                  },
                  "/schema.graphql"
                ]
              ]
            }
          }
        },
        "GraphQLAPIDefaultApiKey215A6DD7": {
          "Type": "AWS::AppSync::ApiKey",
          "Properties": {
            "ApiId": {
              "Fn::GetAtt": [
                "GraphQLAPI",
                "ApiId"
              ]
            },
            "Description": "Default API Key",
            "Expires": 1662092377
          },
          "Metadata": {
            "aws:cdk:path": "transformer-root-stack/GraphQLAPI/DefaultApiKey"
          }
        },
        "GraphQLAPINONEDS95A13CF0": {
          "Type": "AWS::AppSync::DataSource",
          "Properties": {
            "ApiId": {
              "Fn::GetAtt": [
                "GraphQLAPI",
                "ApiId"
              ]
            },
            "Name": "NONE_DS",
            "Type": "NONE",
            "Description": "None Data Source for Pipeline functions"
          },
          "Metadata": {
            "aws:cdk:path": "transformer-root-stack/GraphQLAPI/NONE_DS/Resource"
          }
        },
        "TodoTask": {
          "Type": "AWS::CloudFormation::Stack",
          "Properties": {
            "TemplateURL": {
              "Fn::Join": [
                "",
                [
                  "https://s3.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/",
                  {
                    "Ref": "S3DeploymentBucket"
                  },
                  "/",
                  {
                    "Ref": "S3DeploymentRootKey"
                  },
                  "/stacks/TodoTask.json"
                ]
              ]
            },
            "Parameters": {
              "DynamoDBModelTableReadIOPS": {
                "Ref": "DynamoDBModelTableReadIOPS"
              },
              "DynamoDBModelTableWriteIOPS": {
                "Ref": "DynamoDBModelTableWriteIOPS"
              },
              "DynamoDBBillingMode": {
                "Ref": "DynamoDBBillingMode"
              },
              "DynamoDBEnablePointInTimeRecovery": {
                "Ref": "DynamoDBEnablePointInTimeRecovery"
              },
              "DynamoDBEnableServerSideEncryption": {
                "Ref": "DynamoDBEnableServerSideEncryption"
              },
              "referencetotransformerrootstackenv10C5A902Ref": {
                "Ref": "env"
              },
              "referencetotransformerrootstackGraphQLAPI20497F53ApiId": {
                "Fn::GetAtt": [
                  "GraphQLAPI",
                  "ApiId"
                ]
              },
              "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name": {
                "Fn::GetAtt": [
                  "GraphQLAPINONEDS95A13CF0",
                  "Name"
                ]
              },
              "referencetotransformerrootstackS3DeploymentBucket7592718ARef": {
                "Ref": "S3DeploymentBucket"
              },
              "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": {
                "Ref": "S3DeploymentRootKey"
              }
            }
          },
          "DependsOn": [
            "GraphQLAPITransformerSchema3CB2AE18"
          ]
        },
        "SharedWith": {
          "Type": "AWS::CloudFormation::Stack",
          "Properties": {
            "TemplateURL": {
              "Fn::Join": [
                "",
                [
                  "https://s3.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/",
                  {
                    "Ref": "S3DeploymentBucket"
                  },
                  "/",
                  {
                    "Ref": "S3DeploymentRootKey"
                  },
                  "/stacks/SharedWith.json"
                ]
              ]
            },
            "Parameters": {
              "DynamoDBModelTableReadIOPS": {
                "Ref": "DynamoDBModelTableReadIOPS"
              },
              "DynamoDBModelTableWriteIOPS": {
                "Ref": "DynamoDBModelTableWriteIOPS"
              },
              "DynamoDBBillingMode": {
                "Ref": "DynamoDBBillingMode"
              },
              "DynamoDBEnablePointInTimeRecovery": {
                "Ref": "DynamoDBEnablePointInTimeRecovery"
              },
              "DynamoDBEnableServerSideEncryption": {
                "Ref": "DynamoDBEnableServerSideEncryption"
              },
              "referencetotransformerrootstackenv10C5A902Ref": {
                "Ref": "env"
              },
              "referencetotransformerrootstackGraphQLAPI20497F53ApiId": {
                "Fn::GetAtt": [
                  "GraphQLAPI",
                  "ApiId"
                ]
              },
              "referencetotransformerrootstackS3DeploymentBucket7592718ARef": {
                "Ref": "S3DeploymentBucket"
              },
              "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": {
                "Ref": "S3DeploymentRootKey"
              },
              "referencetotransformerrootstackTodoTaskNestedStackTodoTaskNestedStackResourceB67A6D50OutputstransformerrootstackTodoTaskQuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunction2AFC2ECDFunctionId": {
                "Fn::GetAtt": [
                  "TodoTask",
                  "Outputs.transformerrootstackTodoTaskQuerygetTodoTaskpostAuth0FunctionQuerygetTodoTaskpostAuth0FunctionAppSyncFunction2AFC2ECDFunctionId"
                ]
              }
            }
          },
          "DependsOn": [
            "GraphQLAPITransformerSchema3CB2AE18"
          ]
        },
        "FunctionDirectiveStack": {
          "Type": "AWS::CloudFormation::Stack",
          "Properties": {
            "TemplateURL": {
              "Fn::Join": [
                "",
                [
                  "https://s3.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/",
                  {
                    "Ref": "S3DeploymentBucket"
                  },
                  "/",
                  {
                    "Ref": "S3DeploymentRootKey"
                  },
                  "/stacks/FunctionDirectiveStack.json"
                ]
              ]
            },
            "Parameters": {
              "referencetotransformerrootstackenv10C5A902Ref": {
                "Ref": "env"
              },
              "referencetotransformerrootstackGraphQLAPI20497F53ApiId": {
                "Fn::GetAtt": [
                  "GraphQLAPI",
                  "ApiId"
                ]
              },
              "referencetotransformerrootstackS3DeploymentBucket7592718ARef": {
                "Ref": "S3DeploymentBucket"
              },
              "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": {
                "Ref": "S3DeploymentRootKey"
              }
            }
          },
          "DependsOn": [
            "GraphQLAPITransformerSchema3CB2AE18"
          ]
        }
      },
      "Outputs": {
        "GraphQLAPIKeyOutput": {
          "Description": "Your GraphQL API ID.",
          "Value": {
            "Fn::GetAtt": [
              "GraphQLAPIDefaultApiKey215A6DD7",
              "ApiKey"
            ]
          },
          "Export": {
            "Name": {
              "Fn::Join": [
                ":",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "GraphQLApiKey"
                ]
              ]
            }
          }
        },
        "GraphQLAPIIdOutput": {
          "Description": "Your GraphQL API ID.",
          "Value": {
            "Fn::GetAtt": [
              "GraphQLAPI",
              "ApiId"
            ]
          },
          "Export": {
            "Name": {
              "Fn::Join": [
                ":",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "GraphQLApiId"
                ]
              ]
            }
          }
        },
        "GraphQLAPIEndpointOutput": {
          "Description": "Your GraphQL API endpoint.",
          "Value": {
            "Fn::GetAtt": [
              "GraphQLAPI",
              "GraphQLUrl"
            ]
          },
          "Export": {
            "Name": {
              "Fn::Join": [
                ":",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "GraphQLApiEndpoint"
                ]
              ]
            }
          }
        }
      }
    }
  }