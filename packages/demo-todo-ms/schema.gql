enum TodoStatusEnum  {
    New,
    Active,
    Complete,
    Deleted
}

type TodoTask 
    @auth(rules: [{ allow: public }])
    @model 
{
    description: String!
    completedDate: AWSDateTime
    status: TodoStatusEnum!
    sharedWith : [SharedWith] @hasMany
    image: Image @hasOne(fields : ["imageId"])
    imageId: ID
}

type Image 
    @auth(rules: [{ allow: public }])
    @model
{
    url: String!
}

input TaskCompletedInput {
    id: ID!
    emailAddress: String!
}

type SharedWith 
    @auth(rules: [{ allow: public }])
    @model( mutations : null)
{
    emailAddress: String!
    date: AWSDateTime!
}

# type Query 
# @aws_api_key
# {

# }

type Mutation {
    shareTask(
        id: ID!
        emailAddress: String!
    ): Boolean
        @aws_api_key
        @function(name: "share-task")

   notifyTaskCompleted(input: TaskCompletedInput): SharedWith
}

# type Subscription @aws_api_key {
#   onTaskCompleted(owner: ID!): TaskCompletedResult @aws_subscribe(mutations: ["notifyTaskCompleted"])
# }